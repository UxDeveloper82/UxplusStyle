
@{
    ViewBag.Title = "TodoList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container mt-4">
    <h2 class="display-4 text-center">
    <i class="fa fa-book-open"></i>MyBooklist</h2>
    <form id="book-form">
        <div class="form-group">
            <label for="title">Title</label>
            <input type="text" id="title" class="form-control" />
        </div>
        <div class="form-group">
            <label for="author">Author</label>
            <input type="text" id="author" class="form-control" />
        </div>
        <div class="form-group">
            <label for="isbn">ISBN</label>
            <input type="text" id="isbn" class="form-control" />
        </div>
        <input type="submit" value="Add Book"
               class="btn btn-primary btn-block"/>
    </form>
    <table class="table table-striped mt-5">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>ISBN</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="book-list"></tbody>
    </table>

</div>

@section scripts
{
<script>
    class Book {
        constructor(title, author, isbn) {
            this.title = title;
            this.author = author;
            this.isbn = isbn;
        }
    }

    // UI Class: Handle UI Tasks

    class UI {
        static displayBooks() {
            const StoreBooks = [
                {
                    title: 'Book One',
                    author: 'John Doe',
                    isbn: '343434'
                },
                {
                    title: 'Book Two',
                    author: 'Jane Doe',
                    isbn: '454545'
                }
            ];
            const books = StoreBooks;

            books.forEach((book) => UI.addBookToList(book));
        }

        static addBookToList(book) {
            const list = document.querySelector("#book-list");

            const row = document.createElement("tr");

            row.innerHTML = `
                <td>${book.title}</td>
                <td>${book.author}</td>
                <td>${book.isbn}</td>
                <td><a href="#" class="btn btn-danger btn-sm 
                delete">X</a></td>          
               `;
            list.appendChild(row);
        }

        static deleteBook(el) {
            if (el.classList.contains("delete")) {
                el.parentElement.parentElement.remove();
            } 
        }

        static clearFields() {
            document.querySelector('#title').value='';
            document.querySelector('#author').value='';
            document.querySelector('#isbn').value='';
        }

    }
    //Store class: Handles Storage

    // Event: Display Books
    document.addEventListener('DOMContentLoaded', UI.displayBooks);

    //Event: Add a Book
    document.querySelector("#book-form").addEventListener('submit', (e) => {
        //Prevent actual submit
        e.preventDefault();

        // Get form values
        const title = document.querySelector("#title").value;
        const author = document.querySelector("#author").value;
        const isbn = document.querySelector("#isbn").value;

        //Validate 
        if (title === '' || author === '' || isbn === '') {
            alert('Please fill in all fields')
        } else {
            // Instatiate book
            const book = new Book(title, author, isbn);

            //Add Book to UI
            UI.addBookToList(book);

            // Clear Fields
            UI.clearFields();
        }

    });
    document.querySelector("#book-list").addEventListener("click", (e) => {
        UI.deleteBook(e.target);
    });

 </script>

}
